version: '2.1'

x-logging:
  &default-logging
  options:
    max-file: '1'
    compress: 'false'
  driver: local

networks:
  monitor-net:
    driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}
    nginx_certs: {}
    nginx_vhost: {}
    nginx_html: {}
    nginx_acme: {}

services:

######################################################################################
#####################           POIFIER CONTAINER              #######################
######################################################################################

  poifier:
    image: grassets/poifier-client
    container_name: poifier
    command:
      - '--poifier-server=https://goerli.poifier.io'
      - '--ethereum-endpoint=${TXN_RPC}'
      - '--mainnet-subgraph-endpoint=https://gateway.testnet.thegraph.com/network'
      - '--graph-node-status-endpoint=http://index-node-0:8030/graphql'
      - '--mnemonic=${OPERATOR_SEED_PHRASE}'
      - '--indexer-address=${STAKING_WALLET_ADDRESS}'
      - '--poifier-token=${POIFIER_TOKEN}'
    tty: true
    networks:
       - monitor-net
    restart: unless-stopped


######################################################################################
#####################            INDEXER AGENT GUI             #######################
######################################################################################

  indexer-agent-gui:
    image: ${INDEXER_AGENT_GUI:-ghcr.io/stakemachine/indexer-agent-ui:v0.1.7}
    container_name: indexer-agent-gui
    depends_on:
      - indexer-agent
    expose:
      - 3000
    environment:
      - UI_LOGIN=${ADMIN_USER:-test}
      - UI_PASS=${ADMIN_PASSWORD:-pass}
      - AGENT_ENDPOINT=${INDEXER_AGENT_ENDPOINT:-http://indexer-agent:8000}
      - SUBGRAPH_ENDPOINT=${INDEXER_AGENT_NETWORK_SUBGRAPH_ENDPOINT:-https://gateway.testnet.thegraph.com/network}
      - VIRTUAL_HOST=${AGENT_GUI_HOST}
      - VIRTUAL_PORT=3000
      - LETSENCRYPT_HOST=${AGENT_GUI_HOST}
    restart: unless-stopped
    networks:
      - monitor-net
    logging: *default-logging


######################################################################################
#####################          NGINX PROXY CONTAINER           #######################
######################################################################################

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    depends_on:
      - grafana
      - indexer-agent-gui
    #environment:
    #  PROMETHEUS_HOST: ${PROMETHEUS_HOST}
    #  HTTP_AUTH_LOGIN: ${HTTP_AUTH_USER}
    #  HTTP_AUTH_PASSWORD: ${HTTP_AUTH_PASSWORD}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - nginx_certs:/etc/nginx/certs
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
    #  - ./nginx-proxy/htpasswd:/etc/nginx/htpasswd
      - ./nginx-proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - monitor-net
    restart: unless-stopped
    logging: *default-logging


######################################################################################
#####################            NGINX SSL CONTAINER           #######################
######################################################################################


  nginx-ssl:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-ssl
    depends_on:
      - grafana
      - indexer-agent-gui
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - nginx_certs:/etc/nginx/certs
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
      - nginx_acme:/etc/acme.sh
    #  - ./nginx-proxy/htpasswd:/etc/nginx/htpasswd
      - ./nginx-proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
    networks:
      - monitor-net
    restart: unless-stopped
    environment:
      NGINX_PROXY_CONTAINER: nginx-proxy
      DEFAULT_EMAIL: ${EMAIL}
    logging: *default-logging


######################################################################################
#####################          PROMETHEUS CONTAINER            #######################
######################################################################################



  prometheus:
    image: prom/prometheus
    container_name: prometheus
    #environment:
    #  VIRTUAL_HOST: ${PROMETHEUS_HOST}
    #  VIRTUAL_PORT: 9090
    #  LETSENCRYPT_HOST: ${PROMETHEUS_HOST}
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    logging: *default-logging



######################################################################################
#####################          ALERT MANAGER CONTAINER         #######################
######################################################################################



  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    expose:
      - 9093
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    logging: *default-logging



######################################################################################
#####################         NODE EXPORTER CONTAINER          #######################
######################################################################################



  nodeexporter:
    image: prom/node-exporter
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    logging: *default-logging



######################################################################################
#####################             CADVISOR CONTAINER           #######################
######################################################################################



  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    logging: *default-logging



######################################################################################
#####################           GRAFANA CONTAINER              #######################
######################################################################################



  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_DISABLE_BRUTE_FORCE_LOGIN_PROTECTION=true
      - postgres_host=${DB_HOST:-postgres}
      - postgres_user=${DB_USER:-graph-node}
      - postgres_pass=${DB_PASS:-db-password}
      - postgres_db=${GRAPH_NODE_DB_NAME:-graph-node}
      - VIRTUAL_HOST=${GRAFANA_HOST}
      - VIRTUAL_PORT=3000
      - LETSENCRYPT_HOST=${GRAFANA_HOST}
      - GF_INSTALL_PLUGINS=fifemon-graphql-datasource
      - subgraph_endpoint=${SUBGRAPH_ENDPOINT:-https://gateway.testnet.thegraph.com/network}
    restart: unless-stopped
    expose:
      - 3000
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    logging: *default-logging



######################################################################################
#####################          PUSHGATEWAY CONTAINER           #######################
######################################################################################



  pushgateway:
    image: prom/pushgateway
    container_name: pushgateway
    restart: unless-stopped
    expose:
      - 9091
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    logging: *default-logging
